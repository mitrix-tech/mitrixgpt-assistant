# Default values for mitrixgpt-agent.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: europe-west4-docker.pkg.dev/mitrix-tools/mitrixgpt-agent/mitrixgpt-agent
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 3000

env:
  - name: Port
    value: "3000"
  - name: LOG_LEVEL
    value: "INFO"
  - name: VECTOR_DB_CLUSTER_URI
    value: "http://qdrant:6333"
  - name: DB_URI
    valueFrom:
      secretKeyRef:
        name: mitrix-tools-secrets
        key: postgres-connection-string
  - name: CONFIGURATION_PATH
    value: "default.configuration.json"
  - name: LLM_API_KEY
    valueFrom:
      secretKeyRef:
        name: mitrix-tools-secrets
        key: LLM_API_KEY
  - name: EMBEDDINGS_API_KEY
    valueFrom:
      secretKeyRef:
        name: mitrix-tools-secrets
        key: EMBEDDINGS_API_KEY
  - name: QDRANT__SERVICE__API_KEY
    valueFrom:
      secretKeyRef:
        name: mitrix-tools-secrets
        key: QDRANT__SERVICE__API_KEY

ingress:
  enabled: true
  className: ""
  annotations:
    alb.ingress.kubernetes.io/load-balancer-name: mitrixgpt-agent-dev-alb
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/manage-backend-security-group-rules: "true"
    alb.ingress.kubernetes.io/ssl-redirect: '443'
    alb.ingress.kubernetes.io/backend-protocol-version: HTTPS
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP":80}, {"HTTPS":443}]'
    alb.ingress.kubernetes.io/ssl-policy: ELBSecurityPolicy-TLS13-1-2-2021-06
    alb.ingress.kubernetes.io/healthcheck-path: /healthz
    alb.ingress.kubernetes.io/target-group-attributes: deregistration_delay.timeout_seconds=30

  tls: []

resources:
  requests:
    cpu: 100m
    memory: 128Mi
  limits:
    cpu: 200m
    memory: 256Mi


livenessProbe:
  httpGet:
    path: /
    port: http
readinessProbe:
  httpGet:
    path: /
    port: http

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}
